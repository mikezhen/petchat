name: Deploy application on PR

on:
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: petchat-85f05
  SERVICE_NAME: petchat

jobs:
  # Job to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'client/**'
            backend:
              - 'server/**'
  # Job to build and deploy frontend code to Firebase Hosting
  build_preview_frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: Build Package
        run: cd client && npm ci && npm run build
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PETCHAT_85F05 }}
          projectId: ${{ env.PROJECT_ID }}
  # Job to build and deploy backend code to Cloud Run
  build_deploy_backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Package
        run: cd server && npm ci && npm run build
      - name: Google Auth
        uses: google-github-actions/auth@v0
        id: auth
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PETCHAT_85F05 }}
          token_format: access_token
      - name: Docker Auth
        uses: docker/login-action@v1
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build & Push Container
        uses: docker/build-push-action@v3
        with:
          context: ./server
          push: true
          tags: us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/server:${{ github.sha }}
      - name: Deploy to CloudRun
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service: ${{ env.SERVICE_NAME }}
          image: us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/server:${{ github.sha }}
