name: Deploy application on merge
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: petchat-85f05
  SERVICE_NAME: petchat
  PET_ID: XctAymVwTqu8onOP34ll

jobs:
  # Job to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
      function: ${{ steps.filter.outputs.function }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'client/**'
            backend:
              - 'server/**'
            function:
              - 'function/**'
  # Job to build and deploy frontend code to Firebase Hosting
  build_deploy_frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: Build Package
        run: cd client && npm ci && npm run build
        env:
          REACT_APP_PET_ID: ${{ env.PET_ID }}
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PETCHAT_85F05 }}'
          channelId: live
          projectId: petchat-85f05
  # Job to build and deploy backend code to Cloud Run
  build_deploy_backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Package
        run: cd server && npm ci && npm run build
      - name: Google Auth
        uses: google-github-actions/auth@v0
        id: auth
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PETCHAT_85F05 }}
          token_format: access_token
      - name: Docker Auth
        uses: docker/login-action@v1
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build & Push Container
        uses: docker/build-push-action@v3
        with:
          context: ./server
          push: true
          tags: us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/server:${{ github.sha }}
      - name: Deploy to CloudRun
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service: ${{ env.SERVICE_NAME }}
          image: us-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/server:${{ github.sha }}
          env_vars: |
            NODE_ENV=production
            FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY_PETCHAT_85F05 }}
            FIREBASE_AUTH_DOMAIN=${{ env.PROJECT_ID }}.firebaseapp.com
            FIREBASE_PROJECT_ID=${{ env.PROJECT_ID }}
            FIREBASE_STORAGE_BUCKET=${{ env.PROJECT_ID }}.appspot.com
            FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_PETCHAT_85F05 }}
            FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_PETCHAT_85F05 }}
            FIREBASE_ADMIN_SDK_CLIENT_EMAIL=${{ secrets.FIREBASE_ADMIN_SDK_CLIENT_EMAIL_PETCHAT_85F05 }}
            FIREBASE_ADMIN_SDK_PRIVATE_KEY=${{ secrets.FIREBASE_ADMIN_SDK_PRIVATE_KEY_PETCHAT_85F05 }}
  # Job to deploy backend code to Cloud Function with Storage trigger
  deploy_cloud_function:
    needs: changes
    if: ${{ needs.changes.outputs.function == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Google Auth
        uses: google-github-actions/auth@v0
        id: auth
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PETCHAT_85F05 }}
          token_format: access_token
      - name: Deploy Function
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: image-processor
          runtime: nodejs16
          entry_point: processImage
          env_vars: |
            FIREBASE_FUNCTION_ORIGIN=${{ env.PROJECT_ID }}
            FIREBASE_STORAGE_BUCKET=${{ env.PROJECT_ID }}.appspot.com
          source_dir: function
          description: Resize & compress uploaded images for petchat
          event_trigger_type: google.storage.object.finalize
          event_trigger_resource: projects/${{ env.PROJECT_ID }}/buckets/${{ env.PROJECT_ID }}.appspot.com
